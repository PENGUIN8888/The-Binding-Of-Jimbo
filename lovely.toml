[manifest]
version = "1.0.0"
dump_lua = true
priority = 0

[[patches]]
[patches.pattern]
target = "functions/misc_functions.lua"
pattern="function modulate_sound(dt)"
position = "before"
payload='''
local function gfuel_pitch()
    local pitch = 1
    for i=1, #G.jokers.cards do
        if G.jokers.cards[i].config.center.name == "wrenbind_gfuel" then
            pitch = pitch + 0.10
        end
    end
    return pitch
end
'''
match_indent=true

[[patches]]
[patches.pattern]
target = "functions/misc_functions.lua"
pattern = "G.PITCH_MOD = (G.PITCH_MOD or 1)*(1 - dt) + dt*((not G.normal_music_speed and G.STATE == G.STATES.GAME_OVER) and 0.5 or 1)"
position = "at"
payload = '''
if G.jokers and G.jokers.cards then
    G.PITCH_MOD = (G.PITCH_MOD or 1)*(1 - dt) + dt*((G.STATE == G.STATES.GAME_OVER) and 0.5 or gfuel_pitch())
else
    G.PITCH_MOD = (G.PITCH_MOD or 1)*(1 - dt) + dt*((not G.normal_music_speed and G.STATE == G.STATES.GAME_OVER) and 0.5 or 1)
end
'''
match_indent = true

[[patches]]
[patches.pattern]
target = "game.lua"
pattern = "{card_limit = self.GAME.starting_params.joker_slots, type = 'joker', highlight_limit = 1})"
position = "at"
payload = "{card_limit = self.GAME.starting_params.joker_slots, type = 'joker', highlight_limit = 1e100})"
match_indent = true

[[patches]]
[patches.pattern]
target = "card.lua"
pattern = '''
for k, v in pairs(self.children) do
    if not v.custom_draw and k ~= 'focused_ui' and k ~= "front" and k ~= "back" and k ~= "soul_parts" and k ~= "center" and k ~= 'floating_sprite' and k~= "shadow" and k~= "use_button" and k ~= 'buy_button' and k ~= 'buy_and_use_button' and k~= "debuff" and k ~= 'price' and k~= 'particles' and k ~= 'h_popup' then v:draw() end
end
'''
position = "at"
payload = '''
if self.config and self.config.center and self.config.center.pos and self.config.center.pos.extra and self.config.center.pos.extra.atlas and (self.config.center.discovered or self.bypass_discovery_center) then
   self.children.charges:draw_shader('dissolve')
end
for k, v in pairs(self.children) do
    if not v.custom_draw and k ~= 'focused_ui' and k ~= "front" and k ~= "charges" and k ~= "back" and k ~= "soul_parts" and k ~= "center" and k ~= 'floating_sprite' and k~= "shadow" and k~= "use_button" and k ~= 'buy_button' and k ~= 'buy_and_use_button' and k~= "debuff" and k ~= 'price' and k~= 'particles' and k ~= 'h_popup' then v:draw() end
end
'''
match_indent = true 

[[patches]]
[patches.pattern]
target="functions/common_events.lua"
pattern = '''
else
    local _pool, _pool_key = get_current_pool(_type, _rarity, legendary, key_append)
    center = pseudorandom_element(_pool, pseudoseed(_pool_key))
    local it = 1
    while center == 'UNAVAILABLE' do
'''
position = "at"
payload = '''
else
    local _pool, _pool_key = get_current_pool(_type, _rarity, legendary, key_append)
    center = 'UNAVAILABLE'
    local it = 1
    while center == 'UNAVAILABLE' do
        it = it + 1
        local test = pseudorandom_element(_pool, pseudoseed(_pool_key..'_resample'..it))
        if not WrenBind.special_jokers[test] and _type ~= WrenBind.special_jokers[test] then
            center = "UNAVAILABLE"
        else
            center = test
        end
'''
match_indent = true
